unit uFramework;

interface

type
  TQuery = class abstract
    procedure Exec(ASQL: string);virtual;abstract;
  end;

  TDBXQuery = class (TQuery)
    procedure Exec(ASQL: string); override;
  end;
  TFDQuery = class (TQuery)
    procedure Exec(ASQL: string); override;
  end;

  TProxyQuery = class(TQuery)
  strict private
    Fquery: TQuery;
  public
    procedure Exec(ASQL: string); override;
  end;

implementation

{ TDBXQuery }

procedure TDBXQuery.Exec(ASQL: string);
begin
  WriteLn('Executando SQL no DBX: ' + ASQL);
end;

{ TFDQuery }

procedure TFDQuery.Exec(ASQL: string);
begin
  Writeln('Executando Sql no FireDAC '+ ASQL);
end;

end.
